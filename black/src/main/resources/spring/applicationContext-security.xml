<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns="http://www.springframework.org/schema/security" 
    xmlns:beans="http://www.springframework.org/schema/beans" 
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
    xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.1.xsd
        http://www.springframework.org/schema/security http://www.springframework.org/schema/security/spring-security-3.1.xsd">

	<!-- Spring-Security 的配置 -->
	<!-- 注意开启use-expressions.表示开启表达式. see:http://www.family168.com/tutorial/springsecurity3/html/el-access.html -->
	<http auto-config="true" use-expressions="true" access-denied-page="/auth/denied">

		<intercept-url pattern="/auth/login" access="permitAll" />
		<intercept-url pattern="/main/admin" access="hasRole('ROLE_ADMIN')" />
		<intercept-url pattern="/main/common" access="hasRole('ROLE_USER')" />

		<form-login login-page="/auth/login" authentication-failure-url="/auth/login?error=true"
			default-target-url="/main/common" />

		<logout invalidate-session="true" logout-success-url="/auth/login" logout-url="/auth/logout" />

		<session-management session-authentication-strategy-ref="sas" />
		
    </http>
    
    
   <beans:bean id="sas" class="org.springframework.security.web.authentication.session.ConcurrentSessionControlStrategy">
	<beans:constructor-arg name="sessionRegistry"  ref="sessionRegistry" />
	<beans:property name="maximumSessions" value="1" />
	<!-- 防止session攻击 -->
	<beans:property name="alwaysCreateSession" value="true"/>
	<beans:property name="migrateSessionAttributes" value="false"/>
	<!--  同一个帐号 同时只能一个人登录 -->
	<beans:property name="exceptionIfMaximumExceeded" value="false"/>
	</beans:bean>
	
    <beans:bean id="sessionRegistry" class="org.springframework.security.core.session.SessionRegistryImpl" /> 

	<!-- 指定一个自定义的authentication-manager :customUserDetailsService -->
	<authentication-manager>
		<authentication-provider user-service-ref="customUserDetailsService">
			<password-encoder ref="passwordEncoder" />
		</authentication-provider>
	</authentication-manager>

	<!-- 对密码进行MD5编码 -->
	<beans:bean class="org.springframework.security.authentication.encoding.Md5PasswordEncoder" id="passwordEncoder" />

	<!-- 通过 customUserDetailsService,Spring会自动的用户的访问级别. 也可以理解成:以后我们和数据库操作就是通过customUserDetailsService来进行关联. -->
	<beans:bean id="customUserDetailsService" class="com.brd.business.main.service.CustomUserDetailsService" />

</beans:beans>

